@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model TourDisplayModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="my-4">
    <form class="row row-cols-lg-auto g-3 align-items-center">
        <div class="col-12">
            <label class="visually-hidden" for="sTerm">Search by Tour Name</label>
            <div class="input-group">
                <div class="input-group-text"></div>
                <input type="text" class="form-control" value="@Model.sTerm " id="sTerm" placeholder="Search by Tour Name">
            </div>
        </div>

        <div class="col-12">
            <label class="visually-hidden" for="categoryId">Categories</label>
            <select class="form-select" id="categoryId" name="categoryId">
                <option selected>Choose...</option>
                @foreach (var category in Model.Categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </select>
        </div>

        <div class="col-12">
            <button type="submit" class="btn btn-primary">Search</button>
            <a href="/Home/Index" class="btn btn-dark">Reset</a>
        </div>
    </form>
</div>
@if (User.IsInRole("Admin"))
{
    <a class="btn btn-primary" href="/Tour/CreateTour">Create Tour</a>
}
<div class="w-100 mt-4 d-flex flex-wrap">
    
    @foreach (var item in Model.Tours)
    {
        <div class="card mx-2 my-4" style="width: 22rem;">
            @if (string.IsNullOrEmpty(item.Image))
            {
                <img src="images/noimage.png" class="card-img-top" alt="...">
            }
            <img src="/images/@item.Image" class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">@item.TourName</h5>
                <p class="card-text">
                    price: @item.Price
                </p>
                <p>
                    Description: @item.TourDescription

                </p>
                <div class="btn-group">
                <button type="button" onclick="add(@item.TourId)" class="btn btn-primary m-2">add to cart</button>
                @if (User.IsInRole("Admin"))
                {
                    <form asp-controller="Tour" asp-route-id="@item.TourId">
                            <button asp-controller="Tour" asp-action="DeleteTour" formmethod="post" asp-route-id="@item.TourId" class="btn btn-danger m-2">Delete Tour</button>
                            <button asp-controller="Tour" asp-action="UpdateGroup" formmethod="get" asp-route-id="@item.TourId" class="btn btn-warning m-2">Update Tour</button>
                    </form>
                    
                }
                </div>
            </div>
        </div>
    }
</div>


@section Scripts {
    <script>
        async function add(tourId) {
            var usernameEL = document.getElementById("username");
            if (usernameEL == null) {
                window.location.href = "/Identity/Account/Login"
            }
            
            try {
                var response = await fetch(`/Cart/AddItem?tourId=${tourId}`)
                console.log(response)
                if (response.status == 200) {
                    debugger;
                    var rezult = await response.json();
                    console.log(rezult);
                    var cartCountEl = document.getElementById("cartCount")
                    cartCountEl.innerHTML = rezult;
                }
            }
            catch (err) {
                console.log(err)
            }
        }
        async function update(tourId) {
            debugger;
            var response = await fetch(`/Tour/UpdateTour?tourId=${tourId}`)
            console.log(response)
            if (response.status == 200) {
                location.href="/Tour/UpdateTour/${tourId}"
            }
        }
        
    </script>
}